version: "3.9"

services:
  cal_db:
    image: postgres:16
    container_name: cal_db_prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - cal_db_data:/var/lib/postgresql/data
    networks: [internal]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 40
    restart: unless-stopped

  cal_backend:
    image: ghcr.io/${REPO_OWNER:-blues1961}/calendrier-backend:${IMAGE_TAG:-latest}
    container_name: cal_backend_prod
    env_file:
      - .env.prod
    depends_on:
      cal_db:
        condition: service_healthy
    ports:
      - "127.0.0.1:8004:8000"
    networks: [internal]
    # (on ne le démarre PAS dans cette étape)
    restart: unless-stopped

  cal_frontend:
    image: ghcr.io/${REPO_OWNER:-blues1961}/calendrier-frontend:${IMAGE_TAG:-latest}
    container_name: cal_frontend_prod
    # Si pas encore d’image dans GHCR, on construira localement au déploiement
    ports:
      - "127.0.0.1:8082:80"     # Apache proxy vers 8082
    networks: [internal]
    # healthcheck retiré (nginx:alpine n’a pas curl/wget par défaut)
    restart: unless-stopped

networks:
  internal:

volumes:
  cal_db_data:
