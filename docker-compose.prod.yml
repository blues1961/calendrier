services:
  db:
    image: postgres:16
    container_name: ${APP_SLUG}_db_${APP_ENV}
    env_file:
      - .env.prod
      - .env.prod.local
    ports:
      - "${PROD_DB_BIND:-127.0.0.1}:${PROD_DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 40
    restart: unless-stopped
    # Sur le réseau "default" (appnet nommé)

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${APP_SLUG}_backend_${APP_ENV}
    env_file:
      - .env.prod
      - .env.prod.local
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - django_static:/app/staticfiles
    expose:
      - "8000"
    command:
      - bash
      - -lc
      - |
          python manage.py migrate --noinput &&
          python manage.py collectstatic --noinput &&
          gunicorn calendar_project.wsgi:application \
            --bind 0.0.0.0:8000 \
            --workers 3 \
            --access-logfile - \
            --error-logfile -
    healthcheck:
      # 301 attendu si SECURE_SSL_REDIRECT => curl -f OK (échoue seulement >=400)
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/api/health/ >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped
    networks:
      - default
      - edge
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=edge"

      # Middleware HTTP -> HTTPS
      - "traefik.http.middlewares.cal-redirect-https.redirectscheme.scheme=https"

      # ----------------------
      # HTTP (redirige vers HTTPS)
      # ----------------------
      - "traefik.http.routers.cal-api-http.rule=Host(`${APP_HOST}`) && PathPrefix(`/api/`)"
      - "traefik.http.routers.cal-api-http.entrypoints=web"
      - "traefik.http.routers.cal-api-http.middlewares=cal-redirect-https"
      - "traefik.http.routers.cal-api-http.priority=100"
      - "traefik.http.routers.cal-api-http.service=cal-api"

      - "traefik.http.routers.cal-admin-http.rule=Host(`${APP_HOST}`) && PathPrefix(`/admin/`)"
      - "traefik.http.routers.cal-admin-http.entrypoints=web"
      - "traefik.http.routers.cal-admin-http.middlewares=cal-redirect-https"
      - "traefik.http.routers.cal-admin-http.priority=100"
      - "traefik.http.routers.cal-admin-http.service=cal-admin"

      # NEW: /static/ en HTTP -> redirige vers HTTPS
      - "traefik.http.routers.cal-static-http.rule=Host(`${APP_HOST}`) && PathPrefix(`/static/`)"
      - "traefik.http.routers.cal-static-http.entrypoints=web"
      - "traefik.http.routers.cal-static-http.middlewares=cal-redirect-https"
      - "traefik.http.routers.cal-static-http.priority=100"
      - "traefik.http.routers.cal-static-http.service=cal-static"

      # ----------------------
      # HTTPS
      # ----------------------
      # API
      - "traefik.http.routers.cal-api.rule=Host(`${APP_HOST}`) && PathPrefix(`/api/`)"
      - "traefik.http.routers.cal-api.entrypoints=websecure"
      - "traefik.http.routers.cal-api.tls=true"
      - "traefik.http.routers.cal-api.tls.certresolver=le"
      - "traefik.http.routers.cal-api.priority=100"
      - "traefik.http.services.cal-api.loadbalancer.server.port=8000"
      - "traefik.http.routers.cal-api.service=cal-api"

      # Admin
      - "traefik.http.routers.cal-admin.rule=Host(`${APP_HOST}`) && PathPrefix(`/admin/`)"
      - "traefik.http.routers.cal-admin.entrypoints=websecure"
      - "traefik.http.routers.cal-admin.tls=true"
      - "traefik.http.routers.cal-admin.tls.certresolver=le"
      - "traefik.http.routers.cal-admin.priority=100"
      - "traefik.http.services.cal-admin.loadbalancer.server.port=8000"
      - "traefik.http.routers.cal-admin.service=cal-admin"

      # NEW: /static/ en HTTPS (WhiteNoise)
      - "traefik.http.routers.cal-static.rule=Host(`${APP_HOST}`) && PathPrefix(`/static/`)"
      - "traefik.http.routers.cal-static.entrypoints=websecure"
      - "traefik.http.routers.cal-static.tls=true"
      - "traefik.http.routers.cal-static.tls.certresolver=le"
      - "traefik.http.routers.cal-static.priority=100"
      - "traefik.http.services.cal-static.loadbalancer.server.port=8000"
      - "traefik.http.routers.cal-static.service=cal-static"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE: ${VITE_API_BASE:-/api}
        VITE_ADMIN_URL: ${VITE_ADMIN_URL}
        APP_NAME: ${APP_NAME}
    container_name: ${APP_SLUG}_frontend_${APP_ENV}
    env_file:
      - .env.prod
      - .env.prod.local
    depends_on:
      backend:
        condition: service_healthy
    expose:
      - "80"
    volumes:
      - django_static:/static:ro
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped
    networks:
      - default
      - edge
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=edge"

      # HTTP -> redirection TLS (frontend ne doit PAS attraper /api /admin /static)
      - "traefik.http.routers.cal-web.rule=Host(`${APP_HOST}`) && !PathPrefix(`/api/`) && !PathPrefix(`/admin/`) && !PathPrefix(`/static/`)"
      - "traefik.http.routers.cal-web.entrypoints=web"
      - "traefik.http.routers.cal-web.middlewares=cal-redirect-https"
      - "traefik.http.routers.cal-web.priority=1"
      - "traefik.http.routers.cal-web.service=cal-frontend"

      # Site (HTTPS) — n’attrape PAS /api, /admin ni /static
      - "traefik.http.routers.cal-websecure.rule=Host(`${APP_HOST}`) && !PathPrefix(`/api/`) && !PathPrefix(`/admin/`) && !PathPrefix(`/static/`)"
      - "traefik.http.routers.cal-websecure.entrypoints=websecure"
      - "traefik.http.routers.cal-websecure.tls=true"
      - "traefik.http.routers.cal-websecure.tls.certresolver=le"
      - "traefik.http.routers.cal-websecure.priority=1"
      - "traefik.http.routers.cal-websecure.service=cal-frontend"
      - "traefik.http.services.cal-frontend.loadbalancer.server.port=80"

volumes:
  pgdata:
    name: ${APP_SLUG}_${APP_ENV}_pgdata
  django_static:
    name: ${APP_SLUG}_${APP_ENV}_static

networks:
  default:
    name: ${APP_SLUG}_${APP_ENV}_appnet
  edge:
    external: true
    name: edge
